Complexité Syllabus 2016 INFO_F101

1)
i=0
while i<n:
    t[i] = 0
    i += 3
O(n)

2)
def somme(c,a,b,n):
    for i in range(n):
        for j in range(n):
            c[i][j] = a[i][j] + b[j][i]
O(n²)

3)
for j in range(4):
    for i in range(n):
        t[i] *= t[i]
O(n)

4)
c=0
i=n * n
while i > 0:
    j=n
    while j > 0:
        c += 1
        j = j//4
    i = i//2
print c
O(n^3)

5)
def symetrie(a,n):
sym = True
i=0
while i<n and sym:
    j=0
    while j<i and sym:
    if a[i][j] != a [j][i]:
        sym = False
        j += 1
    i += 1
return sym
O(n²)

6)
def example1(arr):
    total = 0
    for num in arr:
        total += num
    return total
O(n)

7)
def example2(n):
    for i in range(n):
        print(i)
O(n)

8)
def example3(n):
    for i in range(n):
        for j in range(n):
            print(i, j)
O(n^2)

9)


10)

11)

12)

13)

